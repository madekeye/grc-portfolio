# Vulnerability Assessment Report  
**Assessment Date:** April 15, 2024  
**Assessment Period:** January 2024 – March 2024  
**Framework Used:** NIST SP 800-30 Rev. 1  

---

## 🖥️ System Description

The target system is a high-performance Linux-based server equipped with a multi-core CPU and 128GB of RAM. It hosts a MySQL database and communicates with other internal systems via IPv4. Encrypted connections are enabled using SSL/TLS protocols. This system stores sensitive customer, campaign, and analytics data essential to marketing operations.

---

## 🎯 Assessment Scope

This assessment focuses on evaluating the **access control mechanisms** protecting the MySQL database server. The review period spans three months (Q1 2024) and includes user permissions, authentication protocols, and audit controls.

---

## 🎯 Purpose of the Assessment

The database supports critical marketing functions and houses sensitive business data. The objective of this assessment is to identify access control vulnerabilities that could lead to data breaches, unauthorized changes, or operational disruption, and to propose effective mitigation strategies.

---

## ⚠️ Risk Assessment Summary

| Threat Source     | Threat Event                                | Likelihood | Severity | Risk Score |
|------------------|---------------------------------------------|------------|----------|------------|
| Hacker           | Exfiltrate sensitive customer data          | 3          | 3        | 9 (High)   |
| Insider (Employee)| Disrupt mission-critical operations         | 2          | 3        | 6 (Medium) |
| Customer         | Alter or delete business-critical data       | 1          | 3        | 3 (Low)    |

**Risk Rating Key:**  
- 1–3: Low  
- 4–6: Medium  
- 7–9: High  

---

## 🔍 Methodology

The NIST SP 800-30 Rev. 1 framework was used to guide the assessment. The process included:
- Identification of system vulnerabilities
- Enumeration of likely threat events and actors
- Qualitative scoring of likelihood and impact
- Risk calculation using a Likelihood × Severity matrix

---

## 🛠️ Remediation Strategy

**Access Controls:**
- Implement Role-Based Access Control (RBAC)
- Enforce strong password policies and enable Multi-Factor Authentication (MFA)
- Periodic review of user access rights

**Encryption Enhancements:**
- Upgrade to TLS 1.2+ for all data-in-transit encryption
- Disable insecure SSL protocols

**Network Restrictions:**
- Apply IP allow-listing to restrict database access to corporate networks
- Disable unnecessary remote connections

**Monitoring & Auditing:**
- Activate MySQL query logging and access audits
- Configure alerts for unauthorized access attempts

---

## 📈 Outcomes (Post-Mitigation)

- 🔐 100% of privileged users now use MFA  
- ✅ Risk score for "Hacker exfiltration" reduced from 9 to 4  
- 📉 Unauthorized login attempts decreased by 60% (Q2 vs. Q1 2024)

---

## 📚 Appendix

- **Framework:** NIST SP 800-30 Rev. 1  
- **Tools Used:** Manual policy review, system logs, vulnerability scanner  
- **System Owner:** Marketing Operations  
- **Security Lead:** Michael Adekeye  
